@use './variables' as *;

@mixin mq($min-screen: false, $max-screen: false, $orientation: false) {
  @if ($min-screen and $max-screen) {
    @media all and (min-width: $min-screen) and (max-width: $max-screen) {
      @content;
    }
  } @else if ($max-screen and not $min-screen) {
    @media all and (max-width: $max-screen) {
      @content;
    }
  } @else {
    @media all and (min-width: $min-screen) {
      @content;
    }
  }
}

@mixin generate-utility($utility, $breakpoint: false, $prefix: $hg-prefix) {
  $values: map-get($utility, values);

  @if $prefix == false or $prefix == null {
    $prefix: "";
  }

  @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {
    $values: zip($values, $values);
  }

  @each $key, $value in $values {
    $property: map-get($utility, property);
    $property-class: if(map-has-key($utility, class), map-get($utility, class), $property);
    $property-class-modifier: if($key, "-" + $key,"");
    $breakpoint-class: if($breakpoint, $breakpoint + '\:', "");
    
    @if $value != null { 
      .#{$breakpoint-class + $prefix + $property-class + $property-class-modifier} {
        #{$property}: $value;
      }
    }
  }
}